"""empty message

Revision ID: 023b7a81bfc5
Revises: c7c38ef77e2c
Create Date: 2024-07-04 19:51:34.318779

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '023b7a81bfc5'
down_revision = 'c7c38ef77e2c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('admin')
    op.drop_table('profiles')
    op.drop_table('applications')
    op.drop_table('jobs')
    op.drop_table('employers')
    op.drop_table('notifications')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('admin_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('action_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('action_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('target_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('admin_id', name='admin_pkey')
    )
    op.create_table('users',
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('email', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('profiles',
    sa.Column('profile_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bio', sa.VARCHAR(500), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('skills', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('year_of_graduation', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('previous_employment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.email'], name='profiles_user_id_fkey'),
    sa.PrimaryKeyConstraint('profile_id', name='profiles_pkey')
    )
    op.create_table('employers',
    sa.Column('company_id', sa.INTEGER(), server_default=sa.text("nextval('employers_company_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('available_role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('company_id', name='employers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('jobs',
    sa.Column('job_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('job_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['employers.company_id'], name='jobs_company_id_fkey'),
    sa.PrimaryKeyConstraint('job_id', name='jobs_pkey')
    )
    op.create_table('applications',
    sa.Column('application_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.job_id'], name='applications_job_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.email'], name='applications_user_id_fkey'),
    sa.PrimaryKeyConstraint('application_id', name='applications_pkey')
    )
    op.create_table('notifications',
    sa.Column('notification_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.email'], name='notifications_user_id_fkey'),
    sa.PrimaryKeyConstraint('notification_id', name='notifications_pkey')
    )
    # ### end Alembic commands ###
